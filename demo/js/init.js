var jQT = new $.jQTouch({
    statusBar: 'black-translucent',
    themeSelectionSelector: '#jqt #themes ul',
    preloadImages: []
});

// Some sample Javascript functions:
$(function(){

    // Show a swipe event on swipe test
    $('#swipeme').swipe(function(evt, data) {
        var details = !data ? '': '<strong>' + data.direction + '/' + data.deltaX +':' + data.deltaY + '</strong>!';
        $(this).html('You swiped ' + details );
        $(this).parent().after('<li>swiped!</li>')
    });

    $('#tapme').tap(function(){
        $(this).parent().after('<li>tapped!</li>')
    });

    $('a[target="_blank"]').bind('click', function() {
        if (confirm('This link opens in a new window.')) {
            return true;
        } else {
            return false;
        }
    });

    // Page animation callback events
    $('#pageevents').
        bind('pageAnimationStart', function(e, info){ 
            $(this).find('.info').append('Started animating ' + info.direction + '&hellip;  And the link ' +
                'had this custom data: ' + $(this).data('referrer').data('custom') + '<br>');
        }).
        bind('pageAnimationEnd', function(e, info){
            $(this).find('.info').append('Finished animating ' + info.direction + '.<br><br>');

        });
    
    // Page animations end with AJAX callback event, example 1 (load remote HTML only first time)
    $('#callback').bind('pageAnimationEnd', function(e, info){
        // Make sure the data hasn't already been loaded (we'll set 'loaded' to true a couple lines further down)
        if (!$(this).data('loaded')) {
            // Append a placeholder in case the remote HTML takes its sweet time making it back
            // Then, overwrite the "Loading" placeholder text with the remote HTML
            $(this).append($('<div>Loading</div>').load('ajax.html .info', function() {        
                // Set the 'loaded' var to true so we know not to reload
                // the HTML next time the #callback div animation ends
                $(this).parent().data('loaded', true);  
            }));
        }
    });
    // Orientation callback event
    $('#jqt').bind('turn', function(e, data){
        $('#orient').html('Orientation: ' + data.orientation);
    });
    
});

/***************************************************
 *  The following is generated by cordova template.
 ***************************************************/

// If you want to prevent dragging, uncomment this section
	/*
	function preventBehavior(e) 
	{ 
      e.preventDefault(); 
    };
	document.addEventListener("touchmove", preventBehavior, false);
	*/
	
	/* If you are supporting your own protocol, the var invokeString will contain any arguments to the app launch.
	see http://iphonedevelopertips.com/cocoa/launching-your-own-application-via-a-custom-url-scheme.html
	for more details -jm */
	/*
	function handleOpenURL(url)
	{
		// TODO: do something with the url passed in.
	}
	*/
	
	function onBodyLoad()
	{		
		document.addEventListener("deviceready", onDeviceReady, false);
	}
	
	/* When this function is called, Cordova has been initialized and is ready to roll */
	/* If you are supporting your own protocol, the var invokeString will contain any arguments to the app launch.
	see http://iphonedevelopertips.com/cocoa/launching-your-own-application-via-a-custom-url-scheme.html
	for more details -jm */
	function onDeviceReady()
	{
		// do your thing!
/* 		navigator.notification.alert("Cordova is working") */
	}